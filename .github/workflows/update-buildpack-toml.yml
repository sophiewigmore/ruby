name: Update buildpack.toml

on:
  schedule:
  - cron: '30 */6 * * *'
  workflow_dispatch: {}

concurrency: buildpack_update

jobs:
  version-line:
    name: Setup Version Line Branch Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup.outputs.matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # gets full history
          fetch-tags: true
          token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
      - name: Setup Matrix Array
        id: setup
        run: |
          # get all version line branches
          branches=($(git branch -a | grep -P "\d+\.\d+\.x" | sort -V | sed -e 's/remotes\/origin\///g'))
          branches+=('main')
          json_branches=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${branches[@]}")
          echo $json_branches
          echo "matrix=$json_branches" >> "$GITHUB_OUTPUT"
  update-buildpack-toml:
    runs-on: ubuntu-22.04
    name: Update buildpack.toml
    needs:
      - version-line
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.version-line.outputs.matrix) }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ matrix.branch }}

    - name: Checkout Branch
      uses: paketo-buildpacks/github-config/actions/pull-request/checkout-branch@main
      with:
        branch: automation/buildpack.toml/update-on-${{ matrix.branch }}

    #TODO remove this
    - name: Set up one-off Jam binary
      run: |
        ls -al $GITHUB_WORKSPACE/scripts
        chmod +x "${GITHUB_WORKSPACE}/scripts/jam"
        "${GITHUB_WORKSPACE}/scripts/jam" version
        echo "${GITHUB_WORKSPACE}/scripts/jam" >> $GITHUB_PATH

    - name: Patch Only?
      id: patch
      run: |
        patch_only="false"
        if [[ ${{ matrix.branch }} != "main" ]]; then
          patch_only="true"
        fi
        echo "bool=${patch_only}" >> "$GITHUB_OUTPUT"

    #TODO put this back to main
    - name: Update buildpack.toml
      uses: paketo-buildpacks/github-config/actions/buildpack/update@update-buildpack-patch-only
      with:
        patch_only: ${{ steps.patch.outputs.bool }}

    - name: Commit
      id: commit
      uses: paketo-buildpacks/github-config/actions/pull-request/create-commit@main
      with:
        message: "Updating buildpacks in buildpack.toml"
        pathspec: "."
        # TODO re-add
        # keyid: ${{ secrets.PAKETO_BOT_GPG_SIGNING_KEY_ID }}
        # key: ${{ secrets.PAKETO_BOT_GPG_SIGNING_KEY }}

    - name: Push Branch
      if: ${{ steps.commit.outputs.commit_sha != '' }}
      uses: paketo-buildpacks/github-config/actions/pull-request/push-branch@main
      with:
        branch: automation/buildpack.toml/update-on-${{ matrix.branch }}

    - name: Open Pull Request
      if: ${{ steps.commit.outputs.commit_sha != '' }}
      uses: paketo-buildpacks/github-config/actions/pull-request/open@main
      with:
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
        title: "Updates buildpacks in buildpack.toml"
        branch: automation/buildpack.toml/update-on-${{ matrix.branch }}
        base: ${{ matrix.branch }}
        ## TODO -autolabel?

  failure:
    name: Alert on Failure
    runs-on: ubuntu-22.04
    needs: [update-buildpack-toml]
    if: ${{ always() && needs.update-buildpack-toml.result == 'failure' }}
    steps:
    - name: File Failure Alert Issue
      uses: paketo-buildpacks/github-config/actions/issue/file@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repo: ${{ github.repository }}
        label: "failure:update-buildpack-toml"
        comment_if_exists: true
        issue_title: "Failure: Update Buildpack TOML workflow"
        issue_body: |
          Update Buildpack TOML workflow [failed](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}).
        comment_body: |
          Another failure occurred: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
